// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"ecommerce-golang/config"
	"ecommerce-golang/controller"
	"ecommerce-golang/repository"
	"ecommerce-golang/service"
	"github.com/go-playground/validator/v10"
	"github.com/google/wire"
)

// Injectors from injector.go:

func InitializedProductController() controller.ProductController {
	db := config.SetupDatabaseConnection()
	productRepositoryImpl := repository.NewProductRepositoryImpl(db)
	validate := validator.New()
	productServiceImpl := service.NewProductServiceImpl(productRepositoryImpl, validate)
	productControllerImpl := controller.NewProductControllerImpl(productServiceImpl)
	return productControllerImpl
}

func InitializedCategoryController() controller.CategoryController {
	db := config.SetupDatabaseConnection()
	categoryRepositoryImpl := repository.NewCategoryRepositoryImpl(db)
	validate := validator.New()
	categoryServiceImpl := service.NewCategoryServiceImpl(categoryRepositoryImpl, validate)
	categoryControllerImpl := controller.NewCategoryControllerImpl(categoryServiceImpl)
	return categoryControllerImpl
}

func InitializedAuthController(secret string) controller.AuthController {
	db := config.SetupDatabaseConnection()
	userRepositoryImpl := repository.NewUserRepositoryImpl(db)
	validate := validator.New()
	authServiceImpl := service.NewAuthServiceImpl(userRepositoryImpl, validate)
	jwtServiceImpl := service.NewJWTServiceImpl(secret)
	authControllerImpl := controller.NewAuthControllerImpl(authServiceImpl, jwtServiceImpl)
	return authControllerImpl
}

// injector.go:

var productSet = wire.NewSet(repository.NewProductRepositoryImpl, wire.Bind(new(repository.ProductRepository), new(*repository.ProductRepositoryImpl)), service.NewProductServiceImpl, wire.Bind(new(service.ProductService), new(*service.ProductServiceImpl)), controller.NewProductControllerImpl, wire.Bind(new(controller.ProductController), new(*controller.ProductControllerImpl)))

var categorySet = wire.NewSet(repository.NewCategoryRepositoryImpl, wire.Bind(new(repository.CategoryRepository), new(*repository.CategoryRepositoryImpl)), service.NewCategoryServiceImpl, wire.Bind(new(service.CategoryService), new(*service.CategoryServiceImpl)), controller.NewCategoryControllerImpl, wire.Bind(new(controller.CategoryController), new(*controller.CategoryControllerImpl)))

var authSet = wire.NewSet(repository.NewUserRepositoryImpl, wire.Bind(new(repository.UserRepository), new(*repository.UserRepositoryImpl)), service.NewJWTServiceImpl, wire.Bind(new(service.JWTService), new(*service.JwtServiceImpl)), service.NewAuthServiceImpl, wire.Bind(new(service.AuthService), new(*service.AuthServiceImpl)), controller.NewAuthControllerImpl, wire.Bind(new(controller.AuthController), new(*controller.AuthControllerImpl)))
